syntax = "proto3";


message Person {
  int64 id = 1;
  string name = 2;
}

message Patient {
  Person person = 1;
}

message Doctor {
  Person person = 1;
}

message Technician {
  Person person = 1;
}

message MedicalTest {
  int64 id = 1;
  Patient patient = 2;
  Doctor doctor = 3;
  Technician technician = 4;
  map<string, string> results = 5;
}

message NewMedTestRequest {
  int64 doctor = 1;
  int64 patient = 2;
  int64 technician = 3;
  map<string, string> results = 4;
}

message FilterEvenId {
  bool isEven = 1;
}

message Id {
  int64 id = 1;
}

message Status {
  string status = 1;
}

message Empty {
}

service PatientService {
  rpc FetchAllResults (Id) returns (stream MedicalTest) {};
}

service DoctorService {
  rpc FetchAllResults (Empty) returns (stream MedicalTest) {};
  rpc FetchResults (Id) returns (MedicalTest) {};
  rpc FetchOnIdParity (FilterEvenId) returns (stream MedicalTest) {};
}

service TechnicianService {
  rpc AddResults (NewMedTestRequest) returns (Status) {};
}

service DbService {
  rpc NewPatient(Person) returns (Patient) {};
  rpc NewDoctor(Person) returns (Doctor) {};
  rpc NewTechnician(Person) returns (Technician) {};

  rpc FetchPatients(Empty) returns (stream Patient) {};
  rpc FetchDoctors(Empty) returns (stream Doctor) {};
  rpc FetchTechnicians(Empty) returns (stream Technician) {};
}
